2. Add Two Numbers
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

Example:

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.


Hint to solve: Take care of the carry condition.

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        
        dummyNode = ListNode(0)
        result = dummyNode
        carry = 0
        
        while l1 != None or l2 != None:
            val = 0
            if l1 != None and l2 != None:
                val = l1.val + l2.val + carry
                l1 = l1.next
                l2 = l2.next
            elif l1 == None:
                val = l2.val + carry
                l2 = l2.next
            elif l2 == None:
                val = l1.val + carry
                l1 = l1.next
                
            if val > 9:
                val = val%10
                carry = 1
            else:
                carry = 0
            
            createdNode = ListNode(val)
            dummyNode.next = createdNode
            dummyNode = createdNode

        
        if carry != 0:
            createdNode = ListNode(1)
            dummyNode.next = createdNode
            
        return result.next




Second Attempt

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        carry = 0
        result = None
        head = None
        while l1 or l2:
            total = 0
            if l1:
                total += l1.val
                l1 = l1.next
            if l2:
                total += l2.val
                l2 = l2.next
            total += carry
            carry = (int)(total/10)
            
            if result == None:
                result = ListNode(total%10)
                head = result
            else:
                result.next = ListNode(total%10)
                result = result.next
        if carry != 0:
            result.next = ListNode(carry)
        return head