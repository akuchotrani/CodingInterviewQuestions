Leetcode Problem 141 Linked List Cycle
Description : 
Given a linked list, determine if it has a cycle in it.
To represent a cycle in the given linked list, we use an integer pos which represents the position (0-indexed) in the linked list where tail connects to. 
If pos is -1, then there is no cycle in the linked list.

Example 1:
Input: head = [3,2,0,-4], pos = 1
Output: true
Explanation: There is a cycle in the linked list, where tail connects to the second node.

Example 2:
Input: head = [1,2], pos = 0
Output: true
Explanation: There is a cycle in the linked list, where tail connects to the first node.


Example 3:
Input: head = [1], pos = -1
Output: false
Explanation: There is no cycle in the linked list.


Hint to solve: use rabbit and tortoise method. 2 pointers.

Language: C#

Solution:


/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public bool HasCycle(ListNode head) 
    {
        if(head == null)
            return false;
        
        ListNode tortoise = head;
        ListNode rabbit = head.next;
        
        while(rabbit != null && rabbit.next != null)
        {
            tortoise = tortoise.next;
            rabbit = rabbit.next.next;
            if(tortoise == rabbit)
            {
                return true;
            }
        }
        return false;
    }
}