253. Meeting Rooms II
Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), find the minimum number of conference rooms required.

Example 1:

Input: [[0, 30],[5, 10],[15, 20]]
Output: 2
Example 2:

Input: [[7,10],[2,4]]
Output: 1
NOTE: input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.


Hint to solve: sort the start and end time and move pointers.
If startTime < endTime increase the required room counter by 1.


class Solution:
    def minMeetingRooms(self, intervals: List[List[int]]) -> int:
        
        startTime = []
        endTime = []
        
        for interval in intervals:
            startTime.append(interval[0])
            endTime.append(interval[1])
        
        startTime.sort()
        endTime.sort()
        
        endPtr = 0
        result = 0
        for start in startTime:
            if start < endTime[endPtr]:
                result += 1
            else:
                endPtr += 1
                
        return result