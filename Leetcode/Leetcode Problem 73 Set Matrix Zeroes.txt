73. Set Matrix Zeroes
Given a m x n matrix, if an element is 0, set its entire row and column to 0. Do it in-place.

Example 1:

Input: 
[
  [1,1,1],
  [1,0,1],
  [1,1,1]
]
Output: 
[
  [1,0,1],
  [0,0,0],
  [1,0,1]
]
Example 2:

Input: 
[
  [0,1,2,0],
  [3,4,5,2],
  [1,3,1,5]
]
Output: 
[
  [0,0,0,0],
  [0,4,5,0],
  [0,3,1,0]
]
Follow up:

A straight forward solution using O(mn) space is probably a bad idea.
A simple improvement uses O(m + n) space, but still not the best solution.
Could you devise a constant space solution?


Hint to solve: Use the first row and col as flag markers.

class Solution:
    def setZeroes(self, matrix: List[List[int]]) -> None:
        """
        Do not return anything, modify matrix in-place instead.
        """
        
        isFirstRowZero = False
        for col in range (len(matrix[0])):
            if matrix[0][col] == 0:
                isFirstRowZero = True
        
        isFirstColZero = False
        for row in range (len(matrix)):
            if matrix[row][0] == 0:
                isFirstColZero = True
        
        
        for row in range (1,len(matrix)):
            for col in range(1, len(matrix[0])):
                if matrix[row][col] == 0:
                    matrix[row][0] = 0
                    matrix[0][col] = 0
        
        #Make all the rows that contain 0 in the first row 
        for col in range(1, len(matrix[0])):
            if matrix[0][col] == 0:
                for row in range(1, len(matrix)):
                    matrix[row][col] = 0
                    
        #Make all the cols that contain 0 in the first col to zero
        for row in range(1, len(matrix)):
            if matrix[row][0] == 0:
                for col in range(1, len(matrix[0])):
                    matrix[row][col] = 0
        
        if isFirstRowZero == True:
            for col in range(0, len(matrix[0])):
                matrix[0][col] = 0
        
        if isFirstColZero == True:
            for row in range(0, len(matrix)):
                matrix[row][0] = 0