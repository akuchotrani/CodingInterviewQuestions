227. Basic Calculator II
Implement a basic calculator to evaluate a simple expression string.

The expression string contains only non-negative integers, +, -, *, / operators and empty spaces . The integer division should truncate toward zero.

Example 1:

Input: "3+2*2"
Output: 7
Example 2:

Input: " 3/2 "
Output: 1
Example 3:

Input: " 3+5 / 2 "
Output: 5
Note:

You may assume that the given expression is always valid.
Do not use the eval built-in library function.


Hint: Use a stack.
When a digit: Record the number with proper place of ten's
when a sign:
+ : push num
- : push -num
* : push (pop*num)
/ : push (pop/num)


Note: Here there is special use of sign variable. It always starts with + 
sign is always updated afterwards when a new sign character is seen.



class Solution:
    def calculate(self, s: str) -> int:
        
        stack = []
        currentNum = 0
        sign = '+'
        for index, char in enumerate(s):
            if char.isdigit():
                currentNum = currentNum*10 + (int)(char)
                
            if (char.isdigit() == False and char != ' ') or index == len(s)-1:
                if sign == '+':
                    stack.append(currentNum)
                elif sign == '-':
                    stack.append(-currentNum)
                elif sign == '*':
                    stack.append(stack.pop()*currentNum)
                elif sign == '/':
                    stack.append((int)(stack.pop()/currentNum))
                sign = char
                currentNum = 0
        
        result = 0
        for num in stack:
            result += num