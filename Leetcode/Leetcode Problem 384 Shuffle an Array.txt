384. Shuffle an Array
Shuffle a set of numbers without duplicates.

Example:

// Init an array with set 1, 2, and 3.
int[] nums = {1,2,3};
Solution solution = new Solution(nums);

// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.
solution.shuffle();

// Resets the array back to its original configuration [1,2,3].
solution.reset();

// Returns the random shuffling of array [1,2,3].
solution.shuffle();


Hint to solve: Copy the original array. Generate a random index and use the swapping logic to swap the list.

class Solution:

    def __init__(self, nums: List[int]):
        self.originalList = nums

    def reset(self) -> List[int]:
        return self.originalList
        

    def shuffle(self) -> List[int]:
        shuffledList = self.originalList[:]
        for i in range(len(self.originalList) - 1, 0, -1):
            j = random.randrange(0, i+1)
            shuffledList[i], shuffledList[j] = shuffledList[j], shuffledList[i]
        return shuffledList
        


# Your Solution object will be instantiated and called as such:
# obj = Solution(nums)
# param_1 = obj.reset()
# param_2 = obj.shuffle()