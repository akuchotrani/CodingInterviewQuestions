Leetcode problem 226: Inverting a binary tree

Input
     4
   /   \
  2     7
 / \   / \
1   3 6   9


Output
     4
   /   \
  7     2
 / \   / \
9   6 3   1


Trivia:
This problem was inspired by this original tweet by Max Howell:
Google: 90% of our engineers use the software you wrote (Homebrew), but you canâ€™t invert a binary tree on a whiteboard so f*** off.

HINT TO SOLVE : write a swap code and recursively call the inverttree function untill the left node is not null or right node is not null

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode InvertTree(TreeNode root) 
    {
        if(root == null)
            return root;
        
        TreeNode tmp = root.left;
        root.left = root.right;
        root.right = tmp;
        
        if(root.left != null)
        {
            InvertTree(root.left);
        }
        if(root.right != null)
        {
            InvertTree(root.right);
        }
        return root;
        
    }
}