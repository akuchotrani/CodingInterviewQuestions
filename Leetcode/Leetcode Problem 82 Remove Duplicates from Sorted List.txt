83. Remove Duplicates from Sorted List
Given a sorted linked list, delete all duplicates such that each element appear only once.

Example 1:

Input: 1->1->2
Output: 1->2
Example 2:

Input: 1->1->2->3->3
Output: 1->2->3

Hint to solve: just move the current node next to next node's next if the value is similar.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode DeleteDuplicates(ListNode head) 
    {
        if(head == null)
            return head;
        
        ListNode start = head;
        while(head.next != null)
        {
            int currentVal = head.val;
            int nextVal = head.next.val;
            
            if(currentVal == nextVal)
            {
                head.next = head.next.next;
            }
            else
            {
                head = head.next;
            }
        }
        return start;
        
    }
}