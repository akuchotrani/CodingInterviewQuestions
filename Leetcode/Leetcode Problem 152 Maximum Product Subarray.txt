152. Maximum Product Subarray
Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.


Hint to solve: Keep track of maxProduct and minProduct at every iteration.


class Solution:
    def maxProduct(self, nums: List[int]) -> int:
        
        maximumProduct = nums[0]
        minimumProduct = nums[0]
        previousMaxProduct = nums[0]
        previousMinProduct = nums[0]
        
        answer = nums[0]
        
        for idx, num in enumerate(nums):
            if idx == 0:
                continue
            
            maximumProduct = max(previousMaxProduct*num, previousMinProduct*num, num)
            minimumProduct = min(previousMaxProduct*num, previousMinProduct*num, num)
            
            if maximumProduct > answer:
                answer = maximumProduct
            
            previousMaxProduct = maximumProduct
            previousMinProduct = minimumProduct
            
        return answer