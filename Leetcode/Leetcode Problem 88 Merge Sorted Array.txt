88. Merge Sorted Array
Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:

The number of elements initialized in nums1 and nums2 are m and n respectively.
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.
Example:

Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

Output: [1,2,2,3,5,6]


Hint to solve: To do the merge in place we will have to start with the last index in both the list.


class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        
        nums1_lastIndex = m-1
        nums2_lastIndex = n-1
        
        while nums1_lastIndex >= 0 and nums2_lastIndex >= 0:
            
            if(nums1[nums1_lastIndex] > nums2[nums2_lastIndex]):
                nums1[nums1_lastIndex + nums2_lastIndex + 1] = nums1[nums1_lastIndex]
                nums1_lastIndex -= 1
            else:
                nums1[nums1_lastIndex + nums2_lastIndex + 1] = nums2[nums2_lastIndex]
                nums2_lastIndex -= 1
                
        
        #Edge condition when nums2 has more number of smaller elements
        for i in range(0,nums2_lastIndex+1):
            nums1[i] = nums2[i]
        
        return nums1