21. Merge Two Sorted Lists
Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4


hint to solve: Use heap

import heapq
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        
        myPQ = []
        
        while l1 != None:
            heapq.heappush(myPQ, l1.val)
            l1 = l1.next
        
        while l2 != None:
            heapq.heappush(myPQ, l2.val)
            l2 = l2.next
        
        temp = ListNode(0)
        result = temp
        while len(myPQ) > 0:
            val = heapq.heappop(myPQ)
            createdNode = ListNode(val)
            temp.next = createdNode
            temp = createdNode
        
        return result.next